{"ast":null,"code":"var _jsxFileName = \"/Users/danchemla/acroCharge/client/src/components/pages/transactions/EditTransaction.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditTransaction = ({\n  transaction\n}) => {\n  _s();\n\n  const [tarns, setTrans] = useState(transaction);\n  const [customer, setCustomer] = useState(tarns.customer_id);\n  const [price, setPrice] = useState(tarns.total_price);\n  const [currency, setCurrency] = useState(tarns.currency);\n  const [ccType, setCcType] = useState(tarns.cerdit_card_type);\n  const [ccNumber, setCcNumber] = useState(tarns.cerdit_card_number);\n\n  const updateTransaction = async () => {\n    try {\n      const body = {\n        transction_id: props.transaction.transction_id,\n        customer_id: customer,\n        total_price: price,\n        currency: currency,\n        cerdit_card_type: ccType,\n        cerdit_card_number: ccNumber\n      };\n      const response = await fetch(`http://localhost:3001/transactions/${transaction.transction_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": `#id${transaction.transction_id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      id: `id${transaction.transction_id}`,\n      onClick: () => setTrans(transaction),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"modal-title\",\n              children: \"Edit Transaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"modal\",\n              onClick: () => setTrans(transaction),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: customer,\n              onChange: e => setCustomer(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: price,\n              onChange: e => setPrice(parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: currency,\n              onChange: e => setCurrency(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ccType,\n              onChange: e => setCcType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ccNumber,\n              onChange: e => setCcNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              \"data-dismiss\": \"modal\",\n              onClick: e => updateTransaction(),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              \"data-dismiss\": \"modal\",\n              onClick: () => setTrans(transaction),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditTransaction, \"3hHRdZGClaeoO3DEsk8bUjGz+1g=\");\n\n_c = EditTransaction;\nexport default EditTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTransaction\");","map":{"version":3,"sources":["/Users/danchemla/acroCharge/client/src/components/pages/transactions/EditTransaction.tsx"],"names":["React","useState","EditTransaction","transaction","tarns","setTrans","customer","setCustomer","customer_id","price","setPrice","total_price","currency","setCurrency","ccType","setCcType","cerdit_card_type","ccNumber","setCcNumber","cerdit_card_number","updateTransaction","body","transction_id","props","response","fetch","method","headers","JSON","stringify","err","console","error","e","target","value","parseFloat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { transactionType } from './transactionList';\n\ninterface Props {\n    transaction: transactionType\n}\n\nconst EditTransaction = ({ transaction }) => {\n\n    const [tarns, setTrans] = useState<transactionType>(transaction)\n    const [customer, setCustomer] = useState<string>(tarns.customer_id)\n    const [price, setPrice] = useState<number>(tarns.total_price)\n    const [currency, setCurrency] = useState<string>(tarns.currency)\n    const [ccType, setCcType] = useState<string>(tarns.cerdit_card_type)\n    const [ccNumber, setCcNumber] = useState<string>(tarns.cerdit_card_number)\n\n\n    const updateTransaction = async () => {\n        try {\n            const body: transactionType = {\n                transction_id: props.transaction.transction_id,\n                customer_id: customer,\n                total_price: price,\n                currency: currency,\n                cerdit_card_type: ccType,\n                cerdit_card_number: ccNumber\n            }\n\n            const response = await fetch(`http://localhost:3001/transactions/${transaction.transction_id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n   \n    return (\n        <>\n\n            <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${transaction.transction_id}`}>\n                Edit\n</button>\n\n            <div className=\"modal\" id={`id${transaction.transction_id}`} onClick={() => setTrans(transaction)}>\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\">Edit Transaction</h4>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => setTrans(transaction)} >&times;</button>\n                        </div>\n\n                        <div className=\"modal-body\">\n                            <input\n                                type=\"text\"\n                                value={customer}\n                                onChange={e => setCustomer(e.target.value)}\n                            />\n                            <input\n                                type=\"number\"\n                                value={price}\n                                onChange={e => setPrice(parseFloat(e.target.value))}\n                            />\n                            <input\n                                type=\"text\"\n                                value={currency}\n                                onChange={e => setCurrency(e.target.value)}\n                            />\n                            <input\n                                type=\"text\"\n                                value={ccType}\n                                onChange={e => setCcType(e.target.value)}\n                            />\n                            <input\n                                type=\"text\"\n                                value={ccNumber}\n                                onChange={e => setCcNumber(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateTransaction()} >Edit</button>\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => setTrans(transaction)}>Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default EditTransaction;"]},"metadata":{},"sourceType":"module"}