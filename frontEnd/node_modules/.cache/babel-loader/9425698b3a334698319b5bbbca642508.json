{"ast":null,"code":"var _jsxFileName = \"/Users/danchemla/acroCharge/client/src/components/pages/transactions/EditTransaction.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditTransaction = ({\n  transaction\n}) => {\n  _s();\n\n  const [tarns, setTrans] = useState(transaction);\n\n  const updateTransaction = async () => {\n    try {\n      const body = { ...tarns\n      };\n      const response = await fetch(`http://localhost:3001/transactions/${transaction.transction_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const onChangeInput = e => {\n    setTrans({ ...tarns,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": `#id${transaction.transction_id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      id: `id${transaction.transction_id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"modal-title\",\n              children: \"Edit Transaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"modal\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: tarns.customer_id,\n              onChange: onChangeInput,\n              name: \"customer_id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"number\",\n              value: tarns.total_price,\n              onChange: onChangeInput,\n              name: \"total_price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: tarns.currency,\n              onChange: onChangeInput,\n              name: \"currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: tarns.cerdit_card_type,\n              onChange: onChangeInput,\n              name: \"erdit_card_type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: tarns.cerdit_card_number,\n              onChange: onChangeInput,\n              name: \"cerdit_card_number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              \"data-dismiss\": \"modal\",\n              onClick: e => updateTransaction(),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              \"data-dismiss\": \"modal\",\n              onClick: () => setTrans(transaction),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditTransaction, \"hWB/IepHd4KKbGnyBUBc+FKElVA=\");\n\n_c = EditTransaction;\nexport default EditTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTransaction\");","map":{"version":3,"sources":["/Users/danchemla/acroCharge/client/src/components/pages/transactions/EditTransaction.tsx"],"names":["React","useState","EditTransaction","transaction","tarns","setTrans","updateTransaction","body","response","fetch","transction_id","method","headers","JSON","stringify","err","console","error","onChangeInput","e","target","name","value","customer_id","total_price","currency","cerdit_card_type","cerdit_card_number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\ninterface IProps {\n    transaction: {\n        transction_id: number\n        customer_id: string\n        total_price: number\n        currency: string\n        cerdit_card_type: string\n        cerdit_card_number: string\n    }\n}\n\n\nconst EditTransaction: React.FC<IProps> = ({ transaction }) => {\n\n    const [tarns, setTrans] = useState<IProps[\"transaction\"]>(transaction)\n\n\n    const updateTransaction = async () => {\n        try {\n            const body = { ...tarns }\n\n            const response = await fetch(`http://localhost:3001/transactions/${transaction.transction_id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n\n        } catch (err) {\n            console.error(err)\n        }\n    }\n    const onChangeInput = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        setTrans({\n            ...tarns,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return (\n        <>\n\n            <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${transaction.transction_id}`}>\n                Edit\n</button>\n\n            <div className=\"modal\" id={`id${transaction.transction_id}`}>\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\">Edit Transaction</h4>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" >&times;</button>\n                        </div>\n\n                        <div className=\"modal-body form-group\">\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                value={tarns.customer_id}\n                                onChange={onChangeInput}\n                                name=\"customer_id\"\n                            />\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                value={tarns.total_price}\n                                onChange={onChangeInput}\n                                name=\"total_price\"\n                            />\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                value={tarns.currency}\n                                onChange={onChangeInput}\n                                name=\"currency\"\n                            />\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                value={tarns.cerdit_card_type}\n                                onChange={onChangeInput}\n                                name=\"erdit_card_type\"\n                            />\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                value={tarns.cerdit_card_number}\n                                onChange={onChangeInput}\n                                name=\"cerdit_card_number\"\n                            />\n                        </div>\n\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateTransaction()} >Edit</button>\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => setTrans(transaction)}>Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default EditTransaction;"]},"metadata":{},"sourceType":"module"}