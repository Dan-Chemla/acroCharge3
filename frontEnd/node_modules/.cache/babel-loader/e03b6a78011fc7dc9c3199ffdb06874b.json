{"ast":null,"code":"var _jsxFileName = \"/Users/danchemla/acroCharge/client/src/components/pages/transactions/AddTransaction.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTransaction = () => {\n  _s();\n\n  const emptyTransiction = {\n    customer_id: \"\",\n    total_price: 0,\n    currency: \"\",\n    cerdit_card_type: \"\",\n    cerdit_card_number: \"\"\n  };\n  const [transaction, setTransaction] = useState(emptyTransiction);\n  const [customers, setCustomers] = useState([]);\n\n  const getCustomers = async () => {\n    try {\n      const res = await fetch(\"http://localhost:3001/customers\");\n      const jsonData = await res.json();\n      setCustomers(jsonData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const addTransaction = async () => {\n    try {\n      const body = { ...transaction\n      };\n      const response = await fetch(\"http://localhost:3001/transactions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onChangeInput = e => {\n    setTransaction({ ...transaction,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    getCustomers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#AddTransaction\",\n      children: \"+ Add Transiction +\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      id: \"AddTransaction\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"modal-title\",\n              children: \"Add Transiction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"modal\",\n              onClick: () => setTransaction(emptyTransiction),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: transaction.customer_id,\n              onChange: onChangeInput,\n              name: \"customer_id\",\n              children: [customers.map(cust => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cust.customer_id,\n                children: cust.customer_id\n              }, cust.customer_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                selected: true\n              }, \"0\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: transaction.total_price,\n              onChange: onChangeInput,\n              name: \"total_price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: transaction.currency,\n              onChange: onChangeInput,\n              name: \"currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: transaction.cerdit_card_type,\n              onChange: onChangeInput,\n              name: \"cerdit_card_type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: transaction.cerdit_card_number,\n              onChange: onChangeInput,\n              name: \"cerdit_card_number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              \"data-dismiss\": \"modal\",\n              onClick: () => addTransaction(),\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              \"data-dismiss\": \"modal\",\n              onClick: () => setTransaction(emptyTransiction),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTransaction, \"NJL4iDbvOQw0RHOvx1/tBa66VY4=\");\n\n_c = AddTransaction;\nexport default AddTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"sources":["/Users/danchemla/acroCharge/client/src/components/pages/transactions/AddTransaction.tsx"],"names":["React","useState","useEffect","AddTransaction","emptyTransiction","customer_id","total_price","currency","cerdit_card_type","cerdit_card_number","transaction","setTransaction","customers","setCustomers","getCustomers","res","fetch","jsonData","json","err","console","error","addTransaction","body","response","method","headers","JSON","stringify","log","onChangeInput","e","target","name","value","map","cust"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface IState {\n    transaction: {\n        customer_id: string\n        total_price: number\n        currency: string\n        cerdit_card_type: string\n        cerdit_card_number: string\n    },\n    customers: {\n        customer_id: string\n        first_name: string\n        last_name: string\n        email: string\n        gender: string\n        country: string\n        city: string\n        street: string\n        phone: string\n    }[]\n}\n\n\nconst AddTransaction = () => {\n    const emptyTransiction = {\n        customer_id: \"\",\n        total_price: 0,\n        currency: \"\",\n        cerdit_card_type: \"\",\n        cerdit_card_number: \"\"\n    }\n    const [transaction, setTransaction] = useState(emptyTransiction);\n\n    const [customers, setCustomers] = useState<IState[\"customers\"]>([])\n\n    const getCustomers = async () => {\n        try {\n            const res = await fetch(\"http://localhost:3001/customers\");\n            const jsonData = await res.json();\n            setCustomers(jsonData);\n\n        } catch (err) {\n            console.error(err)\n        }\n    };\n\n    const addTransaction = async () => {\n        try {\n            const body = { ...transaction }\n            const response = await fetch(\"http://localhost:3001/transactions\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const onChangeInput = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        setTransaction({\n            ...transaction,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    useEffect(() => {\n        getCustomers();\n    }, []);\n\n    return (\n        <>\n\n            <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#AddTransaction\">\n                + Add Transiction +\n            </button>\n\n            <div className=\"modal\" id=\"AddTransaction\" >\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\">Add Transiction</h4>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => setTransaction(emptyTransiction)}>&times;</button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <select\n                                value={transaction.customer_id}\n                                onChange={onChangeInput}\n                                name=\"customer_id\">\n                                {customers.map(cust =>\n                                    <option value={cust.customer_id} key={cust.customer_id}>\n                                        {cust.customer_id}\n                                    </option>)}\n                                    <option value=\"\" key=\"0\" selected></option>\n                            </select>\n                            <input\n                                type=\"number\"\n                                value={transaction.total_price}\n                                onChange={onChangeInput}\n                                name=\"total_price\"\n                            />\n                            <input\n                                type=\"text\"\n                                value={transaction.currency}\n                                onChange={(onChangeInput)}\n                                name=\"currency\"\n                            />\n                            <input\n                                type=\"text\"\n                                value={transaction.cerdit_card_type}\n                                onChange={onChangeInput}\n                                name=\"cerdit_card_type\"\n                            />\n                            <input\n                                type=\"text\"\n                                value={transaction.cerdit_card_number}\n                                onChange={onChangeInput}\n                                name=\"cerdit_card_number\"\n                            />\n                        </div>\n\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-success\" data-dismiss=\"modal\" onClick={() => addTransaction()} >Submit</button>\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => setTransaction(emptyTransiction)}>Clear</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n\n\n}\n\nexport default AddTransaction;"]},"metadata":{},"sourceType":"module"}