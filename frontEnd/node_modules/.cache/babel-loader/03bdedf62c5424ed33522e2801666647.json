{"ast":null,"code":"var _jsxFileName = \"/Users/danchemla/acroCharge/client/src/components/pages/transactions/transactionList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport EditTransaction from './EditTransaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionList = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n\n  const deleteTransaction = async id => {\n    try {\n      const deleteTransaction = await fetch(`http://localhost:3001/transactions/${id}`, {\n        method: \"DELETE\"\n      });\n      setTransactions(transactions.filter(trans => trans.transction_id !== id));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const getTransactions = async () => {\n    try {\n      const res = await fetch(\"http://localhost:3001/transactions\");\n      const jsonData = await res.json();\n      setTransactions(jsonData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CustomerId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Credit Card Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Credit Card Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(trans => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: trans.customer_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: trans.total_price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: trans.currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: trans.cerdit_card_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: trans.cerdit_card_number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditTransaction, {\n              transaction: trans\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTransaction(trans.transction_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, trans.transction_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionList, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionList;\nexport default TransactionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"sources":["/Users/danchemla/acroCharge/client/src/components/pages/transactions/transactionList.tsx"],"names":["React","useEffect","useState","EditTransaction","TransactionList","transactions","setTransactions","deleteTransaction","id","fetch","method","filter","trans","transction_id","err","console","error","getTransactions","res","jsonData","json","map","customer_id","total_price","currency","cerdit_card_type","cerdit_card_number"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport EditTransaction from './EditTransaction'\n\n\ninterface State {\n    transaction: {\n        transction_id: number\n        customer_id: string\n        total_price: number\n        currency: string\n        cerdit_card_type: string\n        cerdit_card_number: string\n    }[]\n}\n\n\n\nconst TransactionList = () => {\n\n    const [transactions, setTransactions] = useState<State[\"transaction\"]>([]);\n\n\n    const deleteTransaction = async (id: number) => {\n        try {\n            const deleteTransaction = await fetch(`http://localhost:3001/transactions/${id}`, {\n                method: \"DELETE\"\n            });\n            setTransactions(transactions.filter(trans => trans.transction_id !== id));\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    const getTransactions = async () => {\n        try {\n            const res = await fetch(\"http://localhost:3001/transactions\");\n            const jsonData = await res.json();\n            setTransactions(jsonData);\n\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    useEffect(() => {\n        getTransactions();\n    }, [])\n\n    return (\n        <div>\n            <table className=\"table mt-5 text-center\">\n                <thead>\n                    <tr>\n                        <th>CustomerId</th>\n                        <th>Total Price</th>\n                        <th>Currency</th>\n                        <th>Credit Card Type</th>\n                        <th>Credit Card Number</th>\n                        <th>Edit</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {transactions.map(trans => (\n                        <tr key={trans.transction_id}>\n                            <td>{trans.customer_id}</td>\n                            <td>{trans.total_price}</td>\n                            <td>{trans.currency}</td>\n                            <td>{trans.cerdit_card_type}</td>\n                            <td>{trans.cerdit_card_number}</td>\n                            <td>\n                                <EditTransaction transaction={trans} />\n                            </td>\n                            <td>\n                                <button\n                                    className=\"btn btn-danger\"\n                                    onClick={() => deleteTransaction(trans.transction_id)}>\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TransactionList;"]},"metadata":{},"sourceType":"module"}